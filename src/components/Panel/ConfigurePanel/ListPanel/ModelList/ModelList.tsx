import React, {useState} from "react";
import "./ModelList.css";
import {UseQuery} from "@reduxjs/toolkit/dist/query/react/buildHooks";
import {BaseQueryFn, FetchArgs, FetchBaseQueryError, FetchBaseQueryMeta, QueryDefinition} from "@reduxjs/toolkit/query";
import {LoadingBtn} from "../../../LoadingBtn/LoadingBtn";
import { Link } from "react-router-dom";
import {displayMain} from "../../../panelReducer";
import {useAppDispatch} from "../../../../../store/hooks";
import {useDeleteMovieMutation} from "../../../../../api/api";

interface ModelListingProps{
    name: string,
    handleGetData: UseQuery<QueryDefinition<string[] | null, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError, {}, FetchBaseQueryMeta>, "Movie", Object[], string>>,
    arg1: string,
    arg2?: string
}

const ModelListing : React.FC<ModelListingProps> = ({name, handleGetData, arg1, arg2}) => {
    const  {data, isLoading, isSuccess, isError, error} = handleGetData(null);
    const dispatch = useAppDispatch();
    const [deleteMovie, result] = useDeleteMovieMutation();

    return <div className="model-list">
        {data ? data.map((o: any, index: number) => (
            <div className="entity" key={index}>
                <p>{o[arg1]} {arg2 && `(${o[arg2]})`}</p>
                <div className="entity-btns">
                    <Link to={`/${name}/${o.id}`} className="view-btn btn-svg">
                        <svg width="30" height="30" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M33.8406 17.1281C32.5542 13.8006 30.3209 10.9229 27.4168 8.85072C24.5127 6.77858 21.0651 5.60281 17.5 5.46875C13.9349 5.60281 10.4873 6.77858 7.58318 8.85072C4.67907 10.9229 2.44579 13.8006 1.15937 17.1281C1.07249 17.3684 1.07249 17.6316 1.15937 17.8719C2.44579 21.1994 4.67907 24.0771 7.58318 26.1493C10.4873 28.2214 13.9349 29.3972 17.5 29.5312C21.0651 29.3972 24.5127 28.2214 27.4168 26.1493C30.3209 24.0771 32.5542 21.1994 33.8406 17.8719C33.9275 17.6316 33.9275 17.3684 33.8406 17.1281V17.1281ZM17.5 27.3438C11.7031 27.3438 5.57812 23.0453 3.3578 17.5C5.57812 11.9547 11.7031 7.65625 17.5 7.65625C23.2969 7.65625 29.4219 11.9547 31.6422 17.5C29.4219 23.0453 23.2969 27.3438 17.5 27.3438Z" fill="#a4a4a4"/>
                            <path d="M17.5 10.9375C16.2021 10.9375 14.9333 11.3224 13.8541 12.0435C12.7749 12.7646 11.9337 13.7895 11.437 14.9886C10.9403 16.1878 10.8104 17.5073 11.0636 18.7803C11.3168 20.0533 11.9418 21.2226 12.8596 22.1404C13.7774 23.0582 14.9467 23.6832 16.2197 23.9364C17.4927 24.1896 18.8122 24.0597 20.0114 23.563C21.2105 23.0663 22.2354 22.2251 22.9565 21.1459C23.6776 20.0667 24.0625 18.7979 24.0625 17.5C24.0625 15.7595 23.3711 14.0903 22.1404 12.8596C20.9097 11.6289 19.2405 10.9375 17.5 10.9375ZM17.5 21.875C16.6347 21.875 15.7888 21.6184 15.0694 21.1377C14.3499 20.6569 13.7892 19.9737 13.458 19.1742C13.1269 18.3748 13.0403 17.4951 13.2091 16.6465C13.3779 15.7978 13.7946 15.0183 14.4064 14.4064C15.0183 13.7946 15.7978 13.3779 16.6465 13.2091C17.4951 13.0403 18.3748 13.1269 19.1742 13.458C19.9737 13.7892 20.657 14.3499 21.1377 15.0694C21.6184 15.7888 21.875 16.6347 21.875 17.5C21.875 18.6603 21.4141 19.7731 20.5936 20.5936C19.7731 21.4141 18.6603 21.875 17.5 21.875Z" fill="#a4a4a4"/>
                        </svg>
                    </Link>
                    <button type="button" className="btn-svg delete-btn" onClick={() => {
                        if(window.confirm(`Do you really want to delete ${o[arg1]} ?`)){
                            dispatch(displayMain());
                            deleteMovie((o as any).id);
                        }
                    }}>
                        <svg width="30" height="30" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M13.125 13.125H15.3125V26.25H13.125V13.125Z" fill="#a4a4a4"/>
                            <path d="M19.6875 13.125H21.875V26.25H19.6875V13.125Z" fill="#a4a4a4"/>
                            <path d="M4.375 6.5625V8.75H6.5625V30.625C6.5625 31.2052 6.79297 31.7616 7.2032 32.1718C7.61344 32.582 8.16984 32.8125 8.75 32.8125H26.25C26.8302 32.8125 27.3866 32.582 27.7968 32.1718C28.207 31.7616 28.4375 31.2052 28.4375 30.625V8.75H30.625V6.5625H4.375ZM8.75 30.625V8.75H26.25V30.625H8.75Z" fill="#a4a4a4"/>
                            <path d="M13.125 2.1875H21.875V4.375H13.125V2.1875Z" fill="#a4a4a4"/>
                        </svg>
                    </button>
                </div>
            </div>
        )) :
        <LoadingBtn isLoading={isLoading} />
        }
    </div>
}

interface EntityObjectProps {
    name: string,
    title: string,
    handleGetData: UseQuery<QueryDefinition<string[] | null, BaseQueryFn<string | FetchArgs, unknown, FetchBaseQueryError, {}, FetchBaseQueryMeta>, "Movie", Object[], string>>
    arg1: string,
    arg2?: string
}

export const ModelList : React.FC<EntityObjectProps> = ({name, title, ...rest}) => {
    const [toggled, setToggled] = useState(false);


    return  <div className="model">
        <div className="model-header">
            <button className="nav-btn btn-model-list" onClick={() => setToggled(!toggled)}>
                <svg width="23" height="17" viewBox="0 0 23 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path className="btn-model-list-path" d="M22.0469 1.0625H6.64844C6.53242 1.0625 6.4375 1.15742 6.4375 1.27344V2.75C6.4375 2.86602 6.53242 2.96094 6.64844 2.96094H22.0469C22.1629 2.96094 22.2578 2.86602 22.2578 2.75V1.27344C22.2578 1.15742 22.1629 1.0625 22.0469 1.0625ZM22.0469 8.55078H6.64844C6.53242 8.55078 6.4375 8.6457 6.4375 8.76172V10.2383C6.4375 10.3543 6.53242 10.4492 6.64844 10.4492H22.0469C22.1629 10.4492 22.2578 10.3543 22.2578 10.2383V8.76172C22.2578 8.6457 22.1629 8.55078 22.0469 8.55078ZM22.0469 16.0391H6.64844C6.53242 16.0391 6.4375 16.134 6.4375 16.25V17.7266C6.4375 17.8426 6.53242 17.9375 6.64844 17.9375H22.0469C22.1629 17.9375 22.2578 17.8426 22.2578 17.7266V16.25C22.2578 16.134 22.1629 16.0391 22.0469 16.0391ZM0.742188 2.01172C0.742187 2.20562 0.78038 2.39763 0.854584 2.57677C0.928788 2.75592 1.03755 2.91869 1.17466 3.05581C1.31177 3.19292 1.47455 3.30168 1.65369 3.37588C1.83284 3.45009 2.02485 3.48828 2.21875 3.48828C2.41265 3.48828 2.60466 3.45009 2.78381 3.37588C2.96295 3.30168 3.12573 3.19292 3.26284 3.05581C3.39995 2.91869 3.50871 2.75592 3.58292 2.57677C3.65712 2.39763 3.69531 2.20562 3.69531 2.01172C3.69531 1.81781 3.65712 1.62581 3.58292 1.44666C3.50871 1.26752 3.39995 1.10474 3.26284 0.967631C3.12573 0.83052 2.96295 0.721757 2.78381 0.647553C2.60466 0.573349 2.41265 0.535156 2.21875 0.535156C2.02485 0.535156 1.83284 0.573349 1.65369 0.647553C1.47455 0.721757 1.31177 0.83052 1.17466 0.967631C1.03755 1.10474 0.928788 1.26752 0.854584 1.44666C0.78038 1.62581 0.742187 1.81781 0.742188 2.01172ZM0.742188 9.5C0.742187 9.6939 0.78038 9.88591 0.854584 10.0651C0.928788 10.2442 1.03755 10.407 1.17466 10.5441C1.31177 10.6812 1.47455 10.79 1.65369 10.8642C1.83284 10.9384 2.02485 10.9766 2.21875 10.9766C2.41265 10.9766 2.60466 10.9384 2.78381 10.8642C2.96295 10.79 3.12573 10.6812 3.26284 10.5441C3.39995 10.407 3.50871 10.2442 3.58292 10.0651C3.65712 9.88591 3.69531 9.6939 3.69531 9.5C3.69531 9.3061 3.65712 9.11409 3.58292 8.93494C3.50871 8.7558 3.39995 8.59302 3.26284 8.45591C3.12573 8.3188 2.96295 8.21004 2.78381 8.13583C2.60466 8.06163 2.41265 8.02344 2.21875 8.02344C2.02485 8.02344 1.83284 8.06163 1.65369 8.13583C1.47455 8.21004 1.31177 8.3188 1.17466 8.45591C1.03755 8.59302 0.928788 8.7558 0.854584 8.93494C0.78038 9.11409 0.742187 9.3061 0.742188 9.5ZM0.742188 16.9883C0.742187 17.1822 0.78038 17.3742 0.854584 17.5533C0.928788 17.7325 1.03755 17.8953 1.17466 18.0324C1.31177 18.1695 1.47455 18.2782 1.65369 18.3524C1.83284 18.4267 2.02485 18.4648 2.21875 18.4648C2.41265 18.4648 2.60466 18.4267 2.78381 18.3524C2.96295 18.2782 3.12573 18.1695 3.26284 18.0324C3.39995 17.8953 3.50871 17.7325 3.58292 17.5533C3.65712 17.3742 3.69531 17.1822 3.69531 16.9883C3.69531 16.7944 3.65712 16.6024 3.58292 16.4232C3.50871 16.2441 3.39995 16.0813 3.26284 15.9442C3.12573 15.8071 2.96295 15.6983 2.78381 15.6241C2.60466 15.5499 2.41265 15.5117 2.21875 15.5117C2.02485 15.5117 1.83284 15.5499 1.65369 15.6241C1.47455 15.6983 1.31177 15.8071 1.17466 15.9442C1.03755 16.0813 0.928788 16.2441 0.854584 16.4232C0.78038 16.6024 0.742187 16.7944 0.742188 16.9883Z" fill="#ACACAC"/>
                </svg>
            </button>
            <h2 className="model-title">{title}</h2>
            <Link to={`configure/${name}/new`} className="btn-model-add">
                Add
            </Link>
        </div>
        {toggled &&
            <ModelListing name={name} {...rest} />
        }
    </div>
}